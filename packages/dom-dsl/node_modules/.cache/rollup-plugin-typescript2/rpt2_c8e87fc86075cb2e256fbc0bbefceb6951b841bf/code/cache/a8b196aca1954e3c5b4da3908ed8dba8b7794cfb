{"code":"var StateKind;\r\n(function (StateKind) {\r\n    StateKind[\"BATCH\"] = \"batch\";\r\n    StateKind[\"EAGER\"] = \"eager\";\r\n})(StateKind || (StateKind = {}));\r\n/**\r\n * An update scheduler that supports deferred updates.\r\n */\r\nexport class BatchingEffectScheduler {\r\n    state = { kind: StateKind.EAGER };\r\n    schedule(update) {\r\n        switch (this.state.kind) {\r\n            case StateKind.BATCH:\r\n                this.scheduleBatchedUpdate(update);\r\n                return;\r\n            case StateKind.EAGER:\r\n                this.scheduleEagerUpdate(update);\r\n                return;\r\n            default:\r\n                throw new Error(`fallthrough - BatchingEffectScheduler in invalid state state`);\r\n        }\r\n    }\r\n    enterBatchState() {\r\n        if (this.state.kind === StateKind.BATCH) {\r\n            return;\r\n        }\r\n        this.state = {\r\n            kind: StateKind.BATCH,\r\n            scheduledUpdates: new Set(),\r\n        };\r\n    }\r\n    exitBatchedState() {\r\n        if (this.state.kind !== StateKind.BATCH) {\r\n            return;\r\n        }\r\n        this.state.scheduledUpdates.forEach((update) => update());\r\n        this.state = { kind: StateKind.EAGER };\r\n    }\r\n    scheduleBatchedUpdate(update) {\r\n        this.state.scheduledUpdates.add(update);\r\n    }\r\n    scheduleEagerUpdate(update) {\r\n        update();\r\n    }\r\n}\r\n//# sourceMappingURL=effect_scheduler.js.map","references":["/Users/eric.rodriguez/personal/dev/recoil/packages/dom-dsl/node_modules/atom/node_modules/shared/lib/index.ts","/Users/eric.rodriguez/personal/dev/recoil/packages/dom-dsl/node_modules/atom/lib/atom.ts"],"map":"{\"version\":3,\"file\":\"effect_scheduler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../atom/lib/effect_scheduler.ts\"],\"names\":[],\"mappings\":\"AAGA,IAAK,SAGJ;AAHD,WAAK,SAAS;IACZ,4BAAe,CAAA;IACf,4BAAe,CAAA;AACjB,CAAC,EAHI,SAAS,KAAT,SAAS,QAGb;AAaD;;GAEG;AACH,MAAM,OAAO,uBAAuB;IAC1B,KAAK,GAAyB,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC;IAEzD,QAAQ,CAAC,MAAgB;QAC9B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACvB,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;gBACnC,OAAO;YACT,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBACjC,OAAO;YACT;gBACE,MAAM,IAAI,KAAK,CACb,8DAA8D,CAC/D,CAAC;SACL;IACH,CAAC;IAEM,eAAe;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,EAAE;YACvC,OAAO;SACR;QAED,IAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,SAAS,CAAC,KAAK;YACrB,gBAAgB,EAAE,IAAI,GAAG,EAAE;SAC5B,CAAC;IACJ,CAAC;IAEM,gBAAgB;QACrB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,EAAE;YACvC,OAAO;SACR;QAED,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IAEO,qBAAqB,CAAC,MAAgB;QAC3C,IAAI,CAAC,KAA8B,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IAEO,mBAAmB,CAAC,MAAgB;QAC1C,MAAM,EAAE,CAAC;IACX,CAAC;CACF\"}","dtsmap":{"name":"/Users/eric.rodriguez/personal/dev/recoil/packages/dom-dsl/node_modules/.cache/rollup-plugin-typescript2/placeholder/node_modules/atom/lib/effect_scheduler.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"effect_scheduler.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../atom/lib/effect_scheduler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAClC,OAAO,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AAkB1C;;GAEG;AACH,qBAAa,uBAAwB,YAAW,gBAAgB;IAC9D,OAAO,CAAC,KAAK,CAAmD;IAEzD,QAAQ,CAAC,MAAM,EAAE,QAAQ,GAAG,IAAI;IAehC,eAAe,IAAI,IAAI;IAWvB,gBAAgB,IAAI,IAAI;IAS/B,OAAO,CAAC,qBAAqB;IAI7B,OAAO,CAAC,mBAAmB;CAG5B\"}"},"dts":{"name":"/Users/eric.rodriguez/personal/dev/recoil/packages/dom-dsl/node_modules/.cache/rollup-plugin-typescript2/placeholder/node_modules/atom/lib/effect_scheduler.d.ts","writeByteOrderMark":false,"text":"import { Runnable } from \"shared\";\r\nimport { IEffectScheduler } from \"./atom\";\r\n/**\r\n * An update scheduler that supports deferred updates.\r\n */\r\nexport declare class BatchingEffectScheduler implements IEffectScheduler {\r\n    private state;\r\n    schedule(update: Runnable): void;\r\n    enterBatchState(): void;\r\n    exitBatchedState(): void;\r\n    private scheduleBatchedUpdate;\r\n    private scheduleEagerUpdate;\r\n}\r\n//# sourceMappingURL=effect_scheduler.d.ts.map"}}
