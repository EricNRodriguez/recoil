{"version":3,"file":"bundle.js","sources":["../packages/atom/src/error.ts","../packages/atom/src/weak_collection.ts","../packages/atom/src/atom.ts","../packages/atom/src/context.ts","../packages/atom/src/effect_scheduler.ts","../packages/atom/src/api.ts","../packages/utils/type_check.ts","../packages/dom/src/reconcile.ts","../packages/dom/src/node.ts","../packages/dom/src/element.ts","../packages/dom/src/event.ts","../packages/dom/src/factory.ts","../packages/lazy/src/lazy.ts","../packages/context/src/inject.ts","../packages/context/src/api.ts","../packages/dom-dsl/src/control/forEach.ts","../packages/utils/weak_cache.ts","../packages/dom-dsl/src/control/if.ts","../packages/dom-dsl/src/control/match.ts","../packages/dom/src/util.ts","../packages/dom-dsl/src/element.ts","../packages/dom-dsl/src/control/suspense.ts","../packages/dom-dsl/src/run_app.ts","../packages/dom-jsx/src/control.ts","../packages/dom-jsx/src/jsx.ts","../packages/dom-jsx/src/text.ts"],"sourcesContent":["export class StatefulSideEffectError extends Error {\n  constructor(public message: string) {\n    super(message);\n    this.name = \"StatefulSideEffectError\";\n    this.stack = (<any>new Error()).stack;\n  }\n}\n","import { Consumer } from \"../../utils/function.interface\";\n\nexport class WeakCollection<T extends Object> {\n  private items: WeakRef<T>[] = [];\n  private itemsSet: WeakSet<T> = new WeakSet([]);\n\n  public getItems(): T[] {\n    const items = [\n      ...this.items\n        .map((ref: WeakRef<T>): T | undefined => ref.deref())\n        .filter((item: T | undefined): boolean => item !== undefined)\n        .map((item: T | undefined): T => item!),\n    ];\n    this.removeGCdItems();\n    return items;\n  }\n\n  public register(item: T): void {\n    if (this.itemsSet.has(item)) {\n      return;\n    }\n\n    const ref: WeakRef<T> = new WeakRef<T>(item);\n    this.itemsSet.add(item);\n    this.items.push(ref);\n  }\n\n  public deregister(item: T): void {\n    this.itemsSet.delete(item);\n    this.items = this.items.filter((v) => v.deref() !== item);\n  }\n\n  public reset() {\n    this.items.forEach((ref: WeakRef<T>): void => {\n      const item: T | undefined = ref.deref();\n      if (item !== undefined) {\n        this.itemsSet.delete(item);\n      }\n    });\n    this.items = [];\n  }\n\n  public forEach(consumer: Consumer<T>): void {\n    this.items.forEach((ref: WeakRef<T>): void => {\n      const item: T | undefined = ref.deref();\n      if (item !== undefined) {\n        consumer(item);\n      }\n    });\n    this.removeGCdItems();\n  }\n\n  private removeGCdItems(): void {\n    this.items = this.items.filter(\n      (ref: WeakRef<T>) => ref.deref() !== undefined\n    );\n  }\n}\n","import { Maybe, IMaybe } from \"typescript-monads\";\nimport { IAtom, ILeafAtom } from \"./atom.interface\";\nimport { AtomTrackingContext, ParentAtom } from \"./context\";\nimport { StatefulSideEffectError } from \"./error\";\nimport { WeakCollection } from \"./weak_collection\";\nimport {Producer, Runnable, Function, Supplier} from \"../../utils/function.interface\";\n\nexport const isAtom = (obj: any): boolean => {\n  return (\n    obj instanceof Object &&\n    \"get\" in obj &&\n    \"getUntracked\" in obj &&\n    \"invalidate\" in obj &&\n    \"map\" in obj\n  );\n};\n\nabstract class BaseAtom<T> implements IAtom<T> {\n  private readonly context: AtomTrackingContext;\n  private readonly parents: WeakCollection<ParentAtom> = new WeakCollection<\n    DerivedAtom<Object>\n  >();\n\n  protected constructor(context: AtomTrackingContext) {\n    this.context = context;\n  }\n\n  abstract get(): T;\n\n  abstract getUntracked(): T;\n\n  protected getParents(): ParentAtom[] {\n    return this.parents.getItems();\n  }\n\n  protected forgetParents(): void {\n    this.parents.reset();\n  }\n\n  public invalidate(): void {\n    this.parents.forEach((parent: ParentAtom): void => {\n      parent.childDirty();\n      parent.childReady();\n    });\n  }\n\n  protected getContext(): AtomTrackingContext {\n    return this.context;\n  }\n\n  public latchToCurrentDerivation(): void {\n    this.getContext()\n      .getCurrentParent()\n      .tapSome(this.parents.register.bind(this.parents));\n  }\n\n  public map<R>(mutation:Function<T, R>): IAtom<R> {\n    return new VirtualDerivedAtom(\n      this.context,\n      () => mutation(this.get()),\n    );\n  }\n}\n\nexport interface IEffectScheduler {\n  schedule(effect: Runnable): void;\n}\n\nexport class LeafAtomImpl<T> extends BaseAtom<T> implements ILeafAtom<T> {\n  private value: T;\n\n  constructor(value: T, context: AtomTrackingContext) {\n    super(context);\n    this.value = value;\n  }\n\n  public get(): T {\n    this.latchToCurrentDerivation();\n    return this.getUntracked();\n  }\n\n  public getUntracked(): T {\n    return this.value;\n  }\n\n  public set(value: T): void {\n    this.checkSetIsNotASideEffect();\n\n    if (value === this.value) {\n      return;\n    }\n\n    this.value = value;\n\n    // intentionally kicking AFTER setting, since\n    // we want our effects to run with the new values\n    this.dirty();\n  }\n\n  public update(fn: (val: T) => T): void {\n    this.set(fn(this.getUntracked()));\n  }\n\n  public dirty() {\n    const prevParents: ParentAtom[] = this.getParents();\n    this.forgetParents();\n\n    prevParents.forEach((parent: ParentAtom): void => {\n      parent.childDirty();\n      parent.childReady();\n    });\n  }\n\n  private checkSetIsNotASideEffect(): void {\n    if (this.getContext().getCurrentParent().isSome()) {\n      throw new StatefulSideEffectError(\n        \"stateful set called on leaf atom during derivation\"\n      );\n    }\n  }\n}\n\n/**\n * A derivation that is logically a node in the DAG, but is actually just a virtual node - the runtime graph\n * has no knowledge of it.\n */\nexport class VirtualDerivedAtom<T> implements IAtom<T> {\n  private readonly context: AtomTrackingContext;\n  private readonly derivation: Supplier<T>;\n  private readonly tracker: ILeafAtom<boolean>;\n\n  constructor(context: AtomTrackingContext, derivation: Supplier<T>) {\n    this.context = context;\n    this.derivation = derivation;\n    this.tracker = new LeafAtomImpl(false, context);\n  }\n\n  public get(): T {\n    this.tracker.get();\n    return this.derivation();\n  }\n\n  public getUntracked(): T {\n    this.context.enterNewTrackingContext();\n    try {\n      return this.get();\n    } finally {\n      this.context.exitCurrentTrackingContext();\n    }\n  }\n\n  public invalidate(): void {\n    this.tracker.invalidate();\n  }\n\n  public map<R>(transform: Function<T, R>): IAtom<R> {\n    return new VirtualDerivedAtom(\n      this.context,\n      () => transform(this.get()),\n    );\n  }\n}\n\nexport class DerivedAtom<T> extends BaseAtom<T> {\n  private readonly deriveValue: Producer<T>;\n\n  private value: IMaybe<T> = Maybe.none();\n  private numChildrenNotReady: number = 0;\n\n  constructor(deriveValue: Producer<T>, context: AtomTrackingContext) {\n    super(context);\n    this.deriveValue = deriveValue;\n  }\n\n  public get(): T {\n    this.latchToCurrentDerivation();\n    return this.executeScopedDerivation();\n  }\n\n  private executeScopedDerivation(): T {\n    try {\n      this.getContext().pushParent(this);\n      return this.deriveValue();\n    } finally {\n      this.getContext().popParent();\n    }\n  }\n\n  public getUntracked(): T {\n    this.getContext().enterNewTrackingContext();\n    try {\n      return this.deriveValue();\n    } finally {\n      this.getContext().exitCurrentTrackingContext();\n    }\n  }\n\n  public childReady() {\n    this.numChildrenNotReady--;\n\n    if (this.numChildrenNotReady === 0) {\n      const prevParents: ParentAtom[] = this.getParents();\n      this.forgetParents();\n\n      prevParents.forEach((parent: ParentAtom): void => {\n        parent.childReady();\n      });\n    }\n  }\n\n  public childDirty() {\n    this.discardCachedValue();\n\n    if (this.numChildrenNotReady === 0) {\n      this.getParents().forEach((parent: ParentAtom): void => {\n        parent.childDirty();\n      });\n    }\n\n    this.numChildrenNotReady++;\n  }\n\n  private discardCachedValue() {\n    this.value = Maybe.none();\n  }\n}\n\nenum SideEffectStatus {\n  ACTIVE = \"active\",\n  INACTIVE = \"inactive\",\n}\n\ntype SideEffectState =\n  | { status: SideEffectStatus.ACTIVE }\n  | { status: SideEffectStatus.INACTIVE; dirty: boolean };\n\nexport class SideEffect {\n  private readonly effect: Runnable;\n  private readonly effectScheduler: IEffectScheduler;\n  private readonly context: AtomTrackingContext;\n  private numChildrenNotReady: number = 0;\n  private state: SideEffectState = { status: SideEffectStatus.ACTIVE };\n\n  constructor(\n    effect: Runnable,\n    context: AtomTrackingContext,\n    effectScheduler: IEffectScheduler\n  ) {\n    this.effect = effect;\n    this.context = context;\n    this.effectScheduler = effectScheduler;\n  }\n\n  public run() {\n    this.effectScheduler.schedule(this.runScoped);\n  }\n\n  private runScoped = (): void => {\n    try {\n      this.context.pushParent(this);\n      this.effect();\n    } finally {\n      this.context.popParent();\n    }\n  };\n\n  public childReady() {\n    this.numChildrenNotReady--;\n\n    if (this.numChildrenNotReady === 0) {\n      switch (this.state.status) {\n        case SideEffectStatus.ACTIVE:\n          this.run();\n          return;\n        case SideEffectStatus.INACTIVE:\n          this.state.dirty = true;\n          return;\n        default:\n          throw new Error(\"invalid state\");\n      }\n    }\n  }\n\n  public childDirty() {\n    this.numChildrenNotReady++;\n  }\n\n  public activate() {\n    if (this.state.status === SideEffectStatus.ACTIVE) {\n      return;\n    }\n\n    if (this.state.dirty) {\n      this.run();\n    }\n\n    this.state = { status: SideEffectStatus.ACTIVE };\n  }\n\n  public deactivate() {\n    this.state = { status: SideEffectStatus.INACTIVE, dirty: false };\n  }\n}\n","import { Maybe, IMaybe } from \"typescript-monads\";\n\nexport type ParentAtom = {\n  childDirty(): void;\n  childReady(): void;\n};\n\nexport class AtomTrackingContext {\n  private readonly scopeStack: ParentAtom[][] = [[]];\n\n  private getCurrentScope(): ParentAtom[] {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  public getCurrentParent(): IMaybe<ParentAtom> {\n    const currentScope: ParentAtom[] = this.getCurrentScope();\n\n    if (currentScope.length === 0) {\n      return Maybe.none<ParentAtom>();\n    }\n\n    return Maybe.some(currentScope[currentScope.length - 1]);\n  }\n\n  public pushParent(derivation: ParentAtom): void {\n    this.getCurrentScope().push(derivation);\n  }\n\n  public popParent(): void {\n    this.getCurrentScope().pop();\n  }\n\n  public enterNewTrackingContext(): void {\n    this.scopeStack.push([]);\n  }\n\n  public exitCurrentTrackingContext(): void {\n    if (this.scopeStack.length === 1) {\n      // TODO(ericr): more clear message and type\n      throw new Error(\"unable to exit the base context\");\n    }\n    this.scopeStack.pop();\n  }\n}\n","import { Runnable } from \"../../utils/function.interface\";\nimport { IEffectScheduler } from \"./atom\";\n\nenum StateKind {\n  BATCH = \"batch\",\n  EAGER = \"eager\",\n}\n\ninterface LazyBatchUpdateState {\n  kind: StateKind.BATCH;\n  scheduledUpdates: Set<Runnable>;\n}\n\ninterface EagerUpdateState {\n  kind: StateKind.EAGER;\n}\n\ntype EffectSchedulerState = LazyBatchUpdateState | EagerUpdateState;\n\n/**\n * An update scheduler that supports deferred updates.\n */\nexport class BatchingEffectScheduler implements IEffectScheduler {\n  private state: EffectSchedulerState = { kind: StateKind.EAGER };\n\n  public schedule(update: Runnable): void {\n    switch (this.state.kind) {\n      case StateKind.BATCH:\n        this.scheduleBatchedUpdate(update);\n        return;\n      case StateKind.EAGER:\n        this.scheduleEagerUpdate(update);\n        return;\n      default:\n        throw new Error(\n          `fallthrough - BatchingEffectScheduler in invalid state state`\n        );\n    }\n  }\n\n  public enterBatchState(): void {\n    if (this.state.kind === StateKind.BATCH) {\n      return;\n    }\n\n    this.state = {\n      kind: StateKind.BATCH,\n      scheduledUpdates: new Set(),\n    };\n  }\n\n  public exitBatchedState(): void {\n    if (this.state.kind !== StateKind.BATCH) {\n      return;\n    }\n\n    this.state.scheduledUpdates.forEach((update) => update());\n    this.state = { kind: StateKind.EAGER };\n  }\n\n  private scheduleBatchedUpdate(update: Runnable): void {\n    (this.state as LazyBatchUpdateState).scheduledUpdates.add(update);\n  }\n\n  private scheduleEagerUpdate(update: Runnable): void {\n    update();\n  }\n}\n","import { ILeafAtom, ISideEffectRef } from \"./atom.interface\";\nimport {LeafAtomImpl, DerivedAtom, SideEffect, VirtualDerivedAtom} from \"./atom\";\nimport { IAtom } from \"./atom.interface\";\nimport { Producer, Runnable } from \"../../utils/function.interface\";\nimport { AtomTrackingContext } from \"./context\";\nimport { BatchingEffectScheduler } from \"./effect_scheduler\";\n\n/**\n * A shared tracking context for all atoms created through this api\n */\nconst globalTrackingContext = new AtomTrackingContext();\n\n/**\n * A shared side effect scheduler that provides support for batching updates\n */\nconst globalEffectScheduler = new BatchingEffectScheduler();\n\n/**\n * A generic higher order function\n */\nexport type FunctionDecorator<F extends Function> = (fn: F) => F;\n\n/**\n * A utility class that provides runtime decoration to exported functions, implemented as a singleton.\n */\nclass ApiFunctionBuilder {\n  private static instance: ApiFunctionBuilder = new ApiFunctionBuilder();\n\n  private decoratorRegistry: Map<Function, FunctionDecorator<any>[]> =\n    new Map();\n  private baseFuncRegistry: Map<Function, Function> = new Map();\n\n  public static getInstance(): ApiFunctionBuilder {\n    return ApiFunctionBuilder.instance;\n  }\n\n  /**\n   * A higher order method that provides runtime decoration support to the injected function\n   *\n   * @param baseFunc The function wrapped by the return function\n   * @returns A wrapper function around the injected function, which may be further decorated at runtime.\n   */\n  public build<F extends Function>(baseFunc: F): F {\n    const externalFunc: F = ((...args: any[]): any => {\n      return this.composeFunction(externalFunc)(...args);\n    }) as unknown as F;\n\n    this.decoratorRegistry.set(externalFunc, []);\n    this.baseFuncRegistry.set(externalFunc, baseFunc);\n\n    return externalFunc;\n  }\n\n  /**\n   * Registers runtime decorators for methods constructed by the build method\n   *\n   * @param apiFn The method _returned_ by the build method (not the injected function!)\n   * @param decorator The higher order function to wrap the apiFn\n   */\n  public registerDecorator<F extends Function>(\n    apiFn: F,\n    decorator: FunctionDecorator<F>\n  ): void {\n    if (!this.decoratorRegistry.has(apiFn)) {\n      // TODO(ericr): more specific error type\n      throw new Error(\"decorating the provided function is not supported\");\n    }\n\n    this.decoratorRegistry.get(apiFn)!.push(decorator);\n  }\n\n  /**\n   * Unregisters any runtime decorators injected via the registerDecorator method\n   *\n   * @param apiFn The method _returned_ by the build method (not the injected function!)\n   * @param decorator The higher order decorator that is to be removed\n   */\n  public deregisterDecorator<F extends Function>(\n    apiFn: F,\n    decorator: FunctionDecorator<F>\n  ): void {\n    this.decoratorRegistry.set(\n      apiFn,\n      (this.decoratorRegistry.get(apiFn) ?? []).filter(\n        (dec) => dec !== decorator\n      )\n    );\n  }\n\n  /**\n   * Takes the external function and applies all registered decorators in FIFO order of registration, returning\n   * the decorated function. This is done lazily at runtime to enable runtime decoration.\n   *\n   * @param externalFunc The method _returned_ by the build method\n   * @returns The composed function, being the registered base function with all of the currently registered decorators\n   *          applied.\n   */\n  private composeFunction<F extends Function>(externalFunc: F): F {\n    if (!this.baseFuncRegistry.has(externalFunc)) {\n      // TODO(ericr): more specific message and type\n      throw new Error(\"unable to compose unknown function\");\n    }\n\n    const baseFunc: F = this.baseFuncRegistry.get(externalFunc) as F;\n    const decorations: FunctionDecorator<F>[] = this.decoratorRegistry.get(\n      externalFunc\n    ) as FunctionDecorator<F>[];\n\n    return decorations.reduceRight(\n      (composedFunc: F, decorator: FunctionDecorator<F>): F =>\n        decorator(composedFunc),\n      baseFunc\n    );\n  }\n}\n\n/**\n * Registers a runtime decorator against one of the public factory methods exposed by this module.\n *\n * @param apiFn The exposed function\n * @param decorator The higher order decorator to be applied for all subsequent calls of the apiFn\n */\nexport const registerDecorator = <F extends Function>(\n  apiFn: F,\n  decorator: FunctionDecorator<F>\n): void => {\n  return ApiFunctionBuilder.getInstance().registerDecorator(apiFn, decorator);\n};\n\n/**\n * De-registers decorators that have been applied to the provided apiFn (i.e. createState etc)\n *\n * @param apiFn The exposed function\n * @param decorator The higher order decorator to be removed\n */\nexport const deregisterDecorator = <F extends Function>(\n  apiFn: F,\n  decorator: FunctionDecorator<F>\n): void => {\n  return ApiFunctionBuilder.getInstance().deregisterDecorator(apiFn, decorator);\n};\n\nexport type FetchStateSignature<T> = (\n  fetch: () => Promise<T>\n) => IAtom<T | undefined>;\n\n// TODO(ericr): Support aborting\n/**\n * A lightweight primitive that allows state to be fetched asynchronously and written to a reactive atom. Before\n * resolving, the returned atom will have an undefined value.\n *\n * @param producer A synchronous builder for an asynchronous value. It is important that all dependencies that invalidate\n *                 the returned state are read synchronously (i.e. before any async execution). You should think of this\n *                 as a synchronous factory that produces a promise, with this factory being re-run every time its dependencies\n *                 change.\n * @returns A maybe atom containing the fetched state (or undefined in the instance when the state is being fetched)\n */\nexport const fetchState = ApiFunctionBuilder.getInstance().build(\n  <T>(producer: Producer<Promise<T>>): IAtom<T | undefined> => {\n    let reactionVersion: number = 0;\n    let writeVersion: number = 0;\n\n    const atom = new LeafAtomImpl<T | undefined>(\n      undefined,\n      globalTrackingContext\n    );\n\n    const derivation = new DerivedAtom<Promise<T>>(\n      producer,\n      globalTrackingContext\n    );\n\n    const sideEffectRunnable = (): void => {\n      let currentReactionVersion = reactionVersion++;\n      derivation.get().then((val: T): void => {\n        if (val === undefined) {\n          return;\n        }\n\n        if (writeVersion > currentReactionVersion) {\n          return;\n        }\n        atom.set(val);\n        writeVersion = currentReactionVersion;\n      });\n    };\n\n    const ref = new SideEffect(\n      sideEffectRunnable,\n      globalTrackingContext,\n      globalEffectScheduler\n    );\n    ref.run();\n\n    (atom as any).$$$recoilFetchStateDerivation = [derivation, ref];\n\n    return atom;\n  }\n);\n\nexport type CreateStateSignature<T> = (value: T) => ILeafAtom<T>;\n\n/**\n * A factory method for a leaf atom instance.\n *\n * @param value The value to be stored in the atom.\n * @returns The atom\n */\nexport const createState = ApiFunctionBuilder.getInstance().build(\n  <T>(value: T): ILeafAtom<T> => {\n    return new LeafAtomImpl(value, globalTrackingContext);\n  }\n);\n\nexport type DeriveStateSignature<T> = (derivation: () => T) => IAtom<T>;\n\n/**\n * A factory method for a derived state.\n *\n * The returned atom is dirtied whenever any atomic dependencies used within the\n * derivation are dirtied. Evaluation can either be lazy or eager, depending on\n * the effects registered against it.\n *\n * Which computations to wrap in cached derivations should be considered carefully, ideally through profiling. This\n * is because all writes to leaf atoms have a linear time complexity on the depth of the dependency DAG. Hence,\n * they should be used as tracked cache (memoization) primitive.\n *\n * @param deriveValue A synchronous factory for the state\n * @param cache Determines if the returned Atom is a skip connection in the DAG or an actual node.\n * @returns An atom containing the derived state, which automatically tracks the dependencies that were used to\n *          create it\n */\nexport const deriveState = ApiFunctionBuilder.getInstance().build(\n  <T>(deriveValue: Producer<T>, cache: boolean = true): IAtom<T> => {\n    if (cache) {\n      return new DerivedAtom(deriveValue, globalTrackingContext);\n    } else {\n      return new VirtualDerivedAtom(globalTrackingContext, deriveValue);\n    }\n  }\n);\n\nexport type RunEffectSignature = (effect: Runnable) => ISideEffectRef;\n\n/**\n * A factory method for a tracked side effect\n *\n * The effect will be eagerly run once, and again any time any of its dependencies become dirty.\n *\n * It is important that this side effect is state-free, i.e. writes to atoms should be done with extreme\n * caution, as they can easily create reactive loops that are extremely difficult to find.\n *\n * As this is effectively a leaf in the dependency DAG, a reference to the side effect is returned that\n * should be managed by the caller. It provides lifecycle methods for the effect and also ensures that the\n * effect is not garbage collected. Despite this, it is recommended that this function should be decorated with\n * auto-scoping logic that handles reference management instead of doing it ad-hoc.\n *\n * @param effect The side effect\n * @returns A reference to the side effect (see the above doc)\n */\nexport const runEffect: RunEffectSignature =\n  ApiFunctionBuilder.getInstance().build((effect: Runnable): ISideEffectRef => {\n    const sideEffect: SideEffect = new SideEffect(\n      effect,\n      globalTrackingContext,\n      globalEffectScheduler\n    );\n\n    sideEffect.run();\n\n    return sideEffect;\n  });\n\n/**\n * A utility decorator that auto-wraps instance variables in atoms, and overrides the set and get methods\n * such that they write/read to the atom.\n */\nexport const state = ApiFunctionBuilder.getInstance().build((): void | any => {\n  const registry: WeakMap<Object, ILeafAtom<any>> = new WeakMap<\n    Object,\n    ILeafAtom<any>\n  >();\n\n  return function (target: Object, propertyKey: string) {\n    Object.defineProperty(target, propertyKey, {\n      set: function (this, newVal: any) {\n        if (!registry.has(this)) {\n          registry.set(this, new LeafAtomImpl(newVal, globalTrackingContext));\n        } else {\n          registry.get(this)!.set(newVal);\n        }\n      },\n      get: function (): any {\n        return registry.get(this)!.get();\n      },\n    });\n  };\n});\n\n/**\n * A utility decorator that auto-wraps methods in derived atoms.\n */\nexport const derivedState = ApiFunctionBuilder.getInstance().build(\n  (): string | any => {\n    return (\n      target: Object,\n      propertyKey: string,\n      descriptor: PropertyDescriptor\n    ): any => {\n      const registry: WeakMap<Object, DerivedAtom<any>> = new WeakMap();\n      const originalFn = descriptor.value;\n\n      descriptor.value = function (...args: any[]): any {\n        if (!registry.has(this)) {\n          registry.set(\n            this,\n            new DerivedAtom(() => {\n              return originalFn.apply(this, args);\n            }, globalTrackingContext)\n          );\n        }\n        return registry.get(this)!.get();\n      };\n    };\n  }\n);\n\n/**\n * Executes a callback that is not tracked by external contexts. I.e. reads made within the callback\n * will be made outside any external tracking scopes.\n *\n * @param job The callback to execute in an untracked context\n */\nexport const runUntracked = <T>(job: Producer<T>): T => {\n  try {\n    globalTrackingContext.enterNewTrackingContext();\n    return job();\n  } finally {\n    globalTrackingContext.exitCurrentTrackingContext();\n  }\n};\n\n/**\n * Executes a job in a batched context, such that all eager side effects will be run after the job returns.\n * This is typically useful if you have an invalid intermediate state that is invalid and should never be used\n * in any effects.\n *\n * @param job The job to be run in a batched state, with all effects running after the job completes.\n */\nexport const runBatched = (job: Runnable): void => {\n  try {\n    globalEffectScheduler.enterBatchState();\n    job();\n  } finally {\n    globalEffectScheduler.exitBatchedState();\n  }\n};\n","export const removeNullAndUndefinedItems = <T>(\n  items: (T | null | undefined)[]\n): T[] => {\n  return items.filter(\n    (item: T | null | undefined): boolean => item !== null && item !== undefined\n  ) as T[];\n};\n\nexport const nullOrUndefined = <T>(item: T): boolean => {\n  return item === null || item === undefined;\n};\n\nexport const notNullOrUndefined = <T>(item: T): boolean => {\n  return !nullOrUndefined(item);\n};\n\nexport const nonEmpty = <T>(col: T[]): boolean => {\n  return col.length !== 0;\n};\n","import {nullOrUndefined} from \"../../utils/type_check\";\n\nexport type ReconcileNodeArraysArgs = {\n  parent: Node;\n  currentNodes: Node[];\n  newNodes: Node[];\n};\n\nconst frag: DocumentFragment = document.createDocumentFragment();\n\n// heavily inspired by both\n// https://github.com/ryansolid/dom-expressions/blob/07f693e7a60a487c07966c277f89a7c00c96c72b/packages/dom-expressions/src/reconcile.js\n// and\n// https://github.com/WebReflection/udomdiff/blob/8923d4fac63a40c72006a46eb0af7bfb5fdef282/index.js\nexport const reconcileNodeArrays = ({\n  parent,\n  currentNodes,\n  newNodes,\n}: ReconcileNodeArraysArgs) => {\n  let curLeft: number = 0;\n  let curRight: number = currentNodes.length;\n\n  let newLeft: number = 0;\n  let newRight: number = newNodes.length;\n\n  let newNodesIndex: Map<Node, number> = new Map(\n    newNodes.map((node: Node, idx: number) => [node, idx])\n  );\n\n  const appendRestOfNewNodes = () => {\n    let nextNodeAnchor: Node | null = null;\n    if (newRight < newNodes.length) {\n      if (newLeft > 0) {\n        nextNodeAnchor = newNodes[newLeft - 1].nextSibling;\n      } else {\n        // when `currentNodes` is the common suffix\n        nextNodeAnchor = newNodes[newRight];\n      }\n    } else {\n      nextNodeAnchor = currentNodes[currentNodes.length - 1]?.nextSibling;\n    }\n\n    for (let i = newLeft; i < newRight; ++i) {\n      frag.append(newNodes[i]);\n    }\n    newLeft = newRight;\n\n    parent.insertBefore(frag, nextNodeAnchor);\n  };\n\n  const removeRestOfCurrentNodes = () => {\n    currentNodes.slice(curLeft, curRight).forEach((node: Node): void => {\n      (node as any).remove();\n      ++curLeft;\n    });\n  };\n\n  const fallbackAndMapContiguousChunk = () => {\n    if (newNodesIndex.has(currentNodes[curLeft])) {\n      // We have a node that is in both `currentNodes` and `newNodes`, however has changed index\n      const curStartIndexInNew = newNodesIndex.get(currentNodes[curLeft])!;\n\n      // SC\n      if (curStartIndexInNew < newLeft || curStartIndexInNew >= newRight) {\n        return;\n      }\n\n      // We find the largest common contiguous subsequence of nodes in `currentNodes` starting at curLeft,\n      // that are also contiguous in `newNodes`, starting at `curIIndexInNew`\n      let contigSubsequenceLen: number = 1;\n      for (let i = curLeft + 1; i < curRight && i < newRight; ++i) {\n        const curIIndexInNew: number | undefined = newNodesIndex.get(\n          currentNodes[i]\n        );\n\n        if (\n          nullOrUndefined(curIIndexInNew) ||\n          curIIndexInNew! - contigSubsequenceLen !== curStartIndexInNew\n        ) {\n          break;\n        }\n\n        contigSubsequenceLen++;\n      }\n\n      if (contigSubsequenceLen > curStartIndexInNew - newLeft) {\n        const node: Node = currentNodes[curLeft];\n        while (newLeft < curStartIndexInNew) {\n          parent.insertBefore(newNodes[newLeft], node);\n          ++newLeft;\n        }\n      } else {\n        parent.replaceChild(newNodes[newLeft], currentNodes[curLeft]);\n        ++curLeft;\n        ++newLeft;\n      }\n    } else {\n      (currentNodes[curLeft] as any).remove();\n      ++curLeft;\n    }\n  };\n\n  const clipPrefix = (): void => {\n    while (\n      curLeft < curRight &&\n      newLeft < newRight &&\n      currentNodes[curLeft] === newNodes[newLeft]\n    ) {\n      ++curLeft;\n      ++newLeft;\n    }\n  };\n\n  const clipSuffix = (): void => {\n    while (\n      curRight > curLeft &&\n      newRight > newLeft &&\n      currentNodes[curRight - 1] === newNodes[newRight - 1]\n    ) {\n      --curRight;\n      --newRight;\n    }\n  };\n\n  while (curLeft < curRight || newLeft < newRight) {\n    clipPrefix();\n    clipSuffix();\n\n    if (curLeft === curRight) {\n      appendRestOfNewNodes();\n    } else if (newLeft === newRight) {\n      removeRestOfCurrentNodes();\n    } else {\n      fallbackAndMapContiguousChunk();\n    }\n  }\n};\n","import { reconcileNodeArrays } from \"./reconcile\";\nimport {Runnable} from \"../../utils/function.interface\";\nimport {notNullOrUndefined, nullOrUndefined} from \"../../utils/type_check\";\n\nexport abstract class BaseWNode<A extends Node, B extends BaseWNode<A, B>> {\n  private parent: WNode<Node> | null = null;\n  private readonly node: A;\n  private readonly isDocumentFragment: boolean;\n  private readonly children: WNode<Node>[] = [];\n  private readonly onMountHooks: Set<Runnable> = new Set<Runnable>();\n  private readonly onUnmountHooks: Set<Runnable> = new Set<Runnable>();\n  private currentlyMounted: boolean = false;\n\n  protected constructor(node: A) {\n    this.node = node;\n    this.isDocumentFragment = this.node instanceof DocumentFragment;\n  }\n\n  private isFragment(): boolean {\n    return this.isDocumentFragment;\n  }\n\n  public setProperty<T>(prop: string, value: T): B {\n    (this.unwrap() as any)[prop] = value;\n    return this as unknown as B;\n  }\n\n  private getUnpackedChildren(): Node[] {\n    const unpackedNodes: Node[] = [];\n\n    for (let wNode of this.getChildren()) {\n      if (wNode.isFragment()) {\n        for (let child of wNode.getUnpackedChildren()) {\n          unpackedNodes.push(child);\n        }\n      } else {\n        unpackedNodes.push(wNode.unwrap());\n      }\n    }\n\n    return unpackedNodes;\n  }\n\n  public getChildren(): WNode<Node>[] {\n    return this.children;\n  }\n\n  private rebindChildren(): void {\n    this.setChildren(this.children);\n  }\n\n  public setChildren(children: (WNode<Node> | Node | null | undefined)[]): B {\n    const newChildren: WNode<Node>[] = children\n      .map(wrapInVNode)\n      .filter(notNullOrUndefined) as WNode<Node>[];\n\n    const newChildrenSet: Set<WNode<Node>> = new Set(newChildren);\n    // unmount any current children that are not in the newChildren list\n    if (this.isMounted()) {\n      this.children\n        .filter((cc) => !newChildrenSet.has(cc))\n        .forEach((cc) => {\n          cc.unmount();\n          cc.setParent(null);\n        });\n    }\n    this.children.length = 0;\n    this.children.push(...newChildren);\n\n    // sync mount status of new children to this dom node\n    newChildren.forEach((nc: WNode<Node>): void => {\n      nc.setParent(this);\n      this.syncMountStatusOfChild(nc);\n    });\n\n    if (this.isFragment()) {\n      this.getParent()?.rebindChildren();\n      return this as unknown as B;\n    }\n\n    reconcileNodeArrays({\n      parent: this.unwrap(),\n      currentNodes: Array.from(this.unwrap().childNodes),\n      newNodes: this.getUnpackedChildren(),\n    });\n\n    return this as unknown as B;\n  }\n\n  public syncMountStatusOfChild(child: WNode<Node>): void {\n    child.setParent(this);\n    if (this.isMounted() !== child.isMounted()) {\n      this.isMounted() ? child.mount() : child.unmount();\n    }\n  }\n\n  public isMounted(): boolean {\n    return this.currentlyMounted;\n  }\n\n  private setParent(parent: WNode<Node> | null): void {\n    this.parent = parent;\n  }\n\n  public getParent(): WNode<Node> | null {\n    return this.parent;\n  }\n\n  public mount(): B {\n    this.currentlyMounted = true;\n    this.children.forEach((child: WNode<Node>): void => {\n      child.mount();\n    });\n    this.runMountHooks();\n    return this as unknown as B;\n  }\n\n  public unmount(): B {\n    this.currentlyMounted = false;\n    this.children.forEach((child: WNode<Node>): void => {\n      child.unmount();\n    });\n    this.runUnmountHooks();\n    return this as unknown as B;\n  }\n\n  private runUnmountHooks(): void {\n    this.onUnmountHooks.forEach((hook) => hook());\n  }\n\n  private runMountHooks(): void {\n    this.onMountHooks.forEach((hook) => hook());\n  }\n\n  public registerOnMountHook(hook: Runnable): B {\n    this.onMountHooks.add(hook);\n\n    return this as unknown as B;\n  }\n\n  public registerOnUnmountHook(hook: Runnable): B {\n    this.onUnmountHooks.add(hook);\n\n    return this as unknown as B;\n  }\n\n  public unwrap(): A {\n    return this.node;\n  }\n}\n\nexport class WNode<T extends Node> extends BaseWNode<T, WNode<T>> {\n  constructor(node: T) {\n    super(node);\n  }\n}\n\nexport const isWNode = (content: any): boolean => {\n  return content instanceof Object && \"unwrap\" in content;\n};\n\nexport const unwrapVNode = (content: Node | WNode<Node>): Node => {\n  if (content === null || content === undefined) {\n    return content;\n  }\n\n  if (isWNode(content)) {\n    return (content as WNode<Node>).unwrap();\n  }\n\n  return content as Node;\n};\n\nexport const wrapInVNode = (\n  node: WNode<Node> | Node | string | null | undefined\n): WNode<Node> | null | undefined => {\n  if (nullOrUndefined(node)) {\n    return node as null | undefined;\n  }\n\n  if (isWNode(node)) {\n    return node as WNode<Node>;\n  } else {\n    return new WNode(node as Node);\n  }\n};\n","import { BaseWNode, WNode } from \"./node\";\nimport { Method } from \"../../utils/function.interface\";\nimport { GlobalEventCoordinator } from \"./event\";\nexport type ElementStyle = { [key: string]: string };\n\nexport abstract class BaseWElement<\n  A extends HTMLElement,\n  B extends BaseWElement<A, B>\n> extends BaseWNode<A, B> {\n  private readonly eventCoordinator: GlobalEventCoordinator;\n\n  constructor(element: A, eventCoordinator: GlobalEventCoordinator) {\n    super(element);\n    this.eventCoordinator = eventCoordinator;\n  }\n\n  public setAttribute(attribute: string, value: string): B {\n    this.unwrap().setAttribute(attribute, value as string);\n    return this as unknown as B;\n  }\n\n  public setEventHandler<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: Method<HTMLElement, HTMLElementEventMap[K], void>,\n    delegate: boolean = false\n  ): B {\n    if (delegate) {\n      this.eventCoordinator.attachEventHandler(type, this.unwrap(), listener);\n    } else {\n      this.unwrap().addEventListener(type, listener);\n    }\n    return this as unknown as B;\n  }\n}\n\nexport class WElement<T extends HTMLElement>\n  extends BaseWElement<T, WElement<T>>\n  implements WNode<T>\n{\n  constructor(elem: T, eventCoordinator: GlobalEventCoordinator) {\n    super(elem, eventCoordinator);\n  }\n}\n","import {Consumer} from \"../../utils/function.interface\";\nimport {notNullOrUndefined} from \"../../utils/type_check\";\n\ntype EventHandlerRef = {\n  event: keyof HTMLElementEventMap;\n  handler: Consumer<any>;\n};\n\nexport class GlobalEventCoordinator {\n  private readonly eventTargets: Map<string, WeakSet<EventTarget>> = new Map();\n  private readonly targetHandlers: WeakMap<EventTarget, EventHandlerRef[]> =\n    new WeakMap();\n\n  // registers a delegated event handler on the target. Bubbling is\n  // simulated, with support for events dispatched by nodes within a shadow\n  // dom.\n  public attachEventHandler<K extends keyof HTMLElementEventMap>(\n    event: K,\n    target: EventTarget,\n    handler: Consumer<HTMLElementEventMap[K]>\n  ): void {\n    if (!this.eventTargets.has(event)) {\n      this.eventTargets.set(event, new WeakSet());\n      document.addEventListener(event, this.executeHandlersBottomUp<K>);\n    }\n\n    this.eventTargets.get(event)!.add(target);\n    if (!this.targetHandlers.has(target)) {\n      this.targetHandlers.set(target, []);\n    }\n    this.targetHandlers.get(target)!.push({\n      event: event,\n      handler: handler,\n    });\n\n    return;\n  }\n\n  public detachEventHandlers<K extends keyof HTMLElementEventMap>(\n    event: K,\n    target: EventTarget\n  ): void {\n    this.eventTargets.get(event)?.delete(target);\n    this.targetHandlers.set(\n      target,\n      this.targetHandlers.get(target)?.filter((r) => r.event === event) ?? []\n    );\n  }\n\n  // simulates event bubbling\n  private executeHandlersBottomUp = <K extends keyof HTMLElementEventMap>(\n    event: HTMLElementEventMap[K]\n  ): void => {\n    if (!event.bubbles) {\n      throw new Error(\"delegated events should only be those that bubble\");\n    }\n\n    let curTarget: EventTarget | null = event.composedPath()[0];\n    let target: EventTarget | null = curTarget;\n\n    Object.defineProperty(event, \"target\", { get: () => target });\n    Object.defineProperty(event, \"currentTarget\", { get: () => curTarget });\n\n    // bubble bottom-up - we are traversing the ll manually due to the composedPath\n    // not always containing the complete list of nodes (specifically, closed shadow dom nodes)\n    while (notNullOrUndefined(curTarget) && !event.cancelBubble) {\n      if (this.eventTargets.get(event.type)?.has(curTarget!) ?? false) {\n        this.targetHandlers.get(curTarget!)?.forEach((h) => {\n          h.event === event.type && h.handler(event);\n        });\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/host\n      if (\n        notNullOrUndefined((curTarget as any)?.host) &&\n        (curTarget as any).host instanceof Node\n      ) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/composed\n        curTarget = event.composed ? (curTarget as any).host : null;\n        // since we have crossed a shadow dom boundary, we need to reset target to the shadow dom host node\n        target = curTarget;\n      } else {\n        curTarget = (curTarget as any).parentNode;\n      }\n    }\n\n    return;\n  };\n}\n","import { WElement } from \"./element\";\nimport { IAtom, isAtom, ISideEffectRef, runEffect } from \"../../atom\";\nimport { WNode } from \"./node\";\nimport { GlobalEventCoordinator } from \"./event\";\n\ntype RawOrBinded<T> = IAtom<T> | T;\ntype Props = Record<string, RawOrBinded<any>>;\ntype Children = WNode<Node>[];\n\nconst globalEventCoordinator: GlobalEventCoordinator =\n  new GlobalEventCoordinator();\n\nexport const createElement = <K extends keyof HTMLElementTagNameMap>(\n  tag: K | HTMLElementTagNameMap[K],\n  props: Props,\n  children: Children\n): WElement<HTMLElementTagNameMap[K]> => {\n  const node = new WElement(\n    tag instanceof HTMLElement ? tag : document.createElement(tag),\n    globalEventCoordinator\n  );\n\n  node.setChildren(children);\n\n  Object.entries(props).forEach(([key, val]) => {\n    node.setProperty(key, val);\n    if (isAtom(val)) {\n      const ref: ISideEffectRef = runEffect(() =>\n        node.setProperty(key, val.get())\n      );\n      node.registerOnMountHook(() => ref.activate());\n      node.registerOnUnmountHook(() => ref.deactivate());\n    } else {\n      node.setProperty(key, val);\n    }\n  });\n\n  return node;\n};\n\nexport const createTextNode = (text: RawOrBinded<string>): WNode<Text> => {\n  const node = new WNode(document.createTextNode(\"\"));\n\n  if (isAtom(text)) {\n    const ref: ISideEffectRef = runEffect(() =>\n      node.setProperty(\"textContent\", (text as IAtom<string>).get())\n    );\n    node.registerOnMountHook(ref.activate.bind(ref));\n    node.registerOnUnmountHook(ref.deactivate.bind(ref));\n  } else {\n    node.setProperty(\"textContent\", text as string);\n  }\n\n  return node;\n};\n\nexport const createFragment = (children: Children): WNode<DocumentFragment> => {\n  return new WNode(document.createDocumentFragment()).setChildren(children);\n};\n","import { WNode } from \"../../dom\";\n\ntype DefaultModuleType = {\n  default: (...args: any[]) => WNode<Node>;\n};\n\nexport const lazy = (\n  getModule: () => Promise<DefaultModuleType>\n): ((...args: any[]) => Promise<WNode<Node>>) => {\n  return async (...args: any[]): Promise<WNode<Node>> => {\n    const module = await getModule();\n    return module.default(...args);\n  };\n};\n","import { createState, ILeafAtom, runUntracked } from \"../../atom\";\n\n/**\n * A typesafe key for a symbol in the symbol table.\n */\nexport interface SymbolKey<T> extends Symbol {}\n\nexport class SymbolTable {\n  private readonly symbols: Map<any, ILeafAtom<any>>[] = [new Map()];\n\n  public fork(): SymbolTable {\n    const child: SymbolTable = new SymbolTable();\n    child.symbols.length = 0;\n    child.symbols.push(...this.symbols, new Map());\n    return child;\n  }\n\n  public set<T>(key: SymbolKey<T>, value: T): void {\n    if (this.symbols[this.symbols.length - 1].has(key)) {\n      runUntracked(() =>\n        this.symbols[this.symbols.length - 1].get(key)?.set(value)\n      );\n    } else {\n      this.symbols[this.symbols.length - 1].set(key, createState(value));\n    }\n  }\n\n  public get<T>(key: SymbolKey<T>): T | undefined {\n    for (let i = this.symbols.length - 1; i >= 0; --i) {\n      if (this.symbols[i].has(key)) {\n        return this.symbols[i].get(key)?.get();\n      }\n    }\n\n    return undefined;\n  }\n}\n\nexport class ExecutionScopeManager {\n  private currentScope: SymbolTable = new SymbolTable();\n\n  public getCurrentScope(): SymbolTable {\n    return this.currentScope;\n  }\n\n  /**\n   * Decorates the provided function such that it runs in a child scope of the current scope at the time\n   * of execution.\n   *\n   * @param fn The function to be decorated\n   */\n  public withChildScope<Args extends unknown[], ReturnType>(fn: (...args: [...Args]) => ReturnType) {\n    return (...args: [...Args]): ReturnType => {\n      const parentScope = this.currentScope;\n\n      // At first sight it might seem unintuitive / stupid that we are forking instead of pushing a new scope, however\n      // in order to make provide calls made inside callbacks that execute after a builder has returned work as\n      // you would expect, we need to fork and never pop. This allows for the same 'scoped' behaviour, but also\n      // allows callbacks to work intuitively.\n      this.currentScope = this.currentScope.fork();\n\n      try {\n        return fn(...args);\n      } finally {\n        this.currentScope = parentScope;\n      }\n    };\n  }\n\n  /**\n   * Decorates the provided function such that whenever the returned function is called, it executes the provided\n   * function with the current scope at the time this function is called - i.e. it forms a closure over the current\n   * scope at the time it is decorated.\n   *\n   * @param fn The function to be decorated.\n   */\n  public withCurrentScope<Args extends unknown[], ReturnType>(fn: (...args: [...Args]) => ReturnType) {\n    const capturedScope = this.currentScope.fork();\n    return (...args: [...Args]): ReturnType => {\n        const currentScope = this.currentScope;\n        this.currentScope = capturedScope;\n        try {\n            return fn(...args);\n        } finally {\n          this.currentScope = currentScope;\n        }\n    };\n  }\n}\n","import {SymbolKey, ExecutionScopeManager} from \"./inject\";\nimport { Consumer, Producer, Runnable, Supplier } from \"../../utils/function.interface\";\nimport {WElement, WNode} from \"../../dom\";\nimport { ISideEffectRef, runEffect } from \"../../atom\";\nimport { nonEmpty } from \"../../utils/type_check\";\n\nclass DeferredContextCallbackRegistry<T extends WNode<Node>> {\n  private readonly scope: Consumer<T>[][] = [];\n\n  public defer(fn: Consumer<T>): void {\n    if (!nonEmpty(this.scope)) {\n      throw new Error(\"unable to defer functions outside of a scope\");\n    }\n\n    this.scope[this.scope.length - 1].push(fn);\n  }\n\n  public execute<R extends T>(job: Producer<R>): R {\n    try {\n      this.scope.push([]);\n      const result: R = job();\n      this.scope[this.scope.length - 1].forEach((fn: Consumer<T>) =>\n        fn(result)\n      );\n      return result;\n    } finally {\n      this.scope.pop();\n    }\n  }\n}\n\nconst contextDeferredCallbackRegistry = new DeferredContextCallbackRegistry<WElement<HTMLElement>>();\n\nexport const defer = (deferredFunction: Consumer<WElement<HTMLElement>>): void => {\n  contextDeferredCallbackRegistry.defer(deferredFunction);\n}\n\nexport const onInitialMount = (fn: Runnable): void => {\n  let called: boolean = false;\n  defer((node) =>\n    node.registerOnMountHook(() => {\n      if (called) {\n        return;\n      }\n\n      try {\n        fn();\n      } finally {\n        called = true;\n      }\n    })\n  );\n};\n\nexport const onMount = (fn: Runnable): void => {\n  defer((node) => node.registerOnMountHook(fn));\n};\n\nexport const onUnmount = (fn: Runnable): void => {\n  defer((node) => node.registerOnUnmountHook(fn));\n};\n\n/**\n * Runs a side effect against the dom subtree enclosed by this context\n *\n * The effect will be automatically activated/deactivated with the mounting/unmounting\n * of the context, preventing unnecessary background updates to the dom.\n *\n * @param sideEffect The side effect that will be re-run every time its deps are dirtied.\n */\nexport const runMountedEffect = (sideEffect: Runnable): void => {\n  const ref: ISideEffectRef = runEffect(sideEffect);\n  defer((node) =>\n    node.registerOnMountHook(ref.activate.bind(ref))\n  );\n  defer((node) =>\n    node.registerOnUnmountHook(ref.deactivate.bind(ref))\n  );\n};\n\nconst scopeManager = new ExecutionScopeManager();\n\n/**\n * A type safe DI provider analogous to that provided by the vue composition API.\n *\n * @param key The injection key.\n * @param value The raw value.\n */\nexport const provide = <T>(key: SymbolKey<T>, value: T): void => {\n  scopeManager.getCurrentScope().set(key, value);\n};\n\n/**\n * Returns the value registered against the key, in the current components scope.\n *\n * This is a tracked operation.\n *\n * @param key The injection key.\n */\nexport const inject = <T>(key: SymbolKey<T>): T | undefined => {\n  return scopeManager.getCurrentScope().get(key);\n};\n\n/**\n * Decorates the provided component with a context, allowing the hooks provided by this api\n * to be used.\n *\n * @param component A context builder\n */\nexport const withContext = <\n  Args extends unknown[],\n  ReturnNode extends WElement<HTMLElement>\n>(component: (...args: [...Args]) => ReturnNode) => {\n  return scopeManager.withChildScope((...args: [...Args]) => {\n    // runs the registered callbacks against the returned WElement\n    return contextDeferredCallbackRegistry.execute(() => {\n      return component(...args);\n    });\n  });\n};\n\n/**\n * Wraps a callback inside a closure such that the current contexts scope state is captured and restored for each\n * sub-context run inside the callback.\n *\n * At this point in time, the only scoped state contained within the context API is that used by the dependency\n * injection code, however this wrapper fn is intended to be a catch-all single point for wiring in this sort of\n * behaviour for any future behaviour that requires similar hierarchical scope.\n *\n * @param fn The function to close over the current context scope\n */\nexport const captureContextState = scopeManager.withCurrentScope.bind(scopeManager);\n","import { WNode } from \"../../../dom\"\nimport {Function, Supplier} from \"../../../utils/function.interface\";\nimport { createFragment } from \"../../../dom\";\nimport { runEffect } from \"../../../atom\";\nimport {notNullOrUndefined} from \"../../../utils/type_check\";\n\n// key value pair used for efficient indexing of existing built elements\nexport type IndexedItem<T> = [string, T];\n\n// utility lenses for unboxing index and item from an IndexedItem\nexport const getKey = <T>(item: IndexedItem<T>): string => item[0];\nexport const getItem = <T>(item: IndexedItem<T>): T => item[1];\n\nexport type ForEachProps<T> = {\n  items: Supplier<IndexedItem<T>[]>;\n  render: Function<T, WNode<Node>>;\n};\n\nexport const forEach = <T extends Object>(\n  props: ForEachProps<T>\n): WNode<Node> => {\n  let { items, render } = props;\n\n  const anchor = createFragment([]);\n\n  let currentItemIndex: Map<string, WNode<Node>> = new Map();\n\n  const ref = runEffect((): void => {\n    const newItems: IndexedItem<T>[] = items();\n    const newItemOrder: string[] = newItems.map(getKey);\n    const newItemNodesIndex: Map<string, WNode<Node>> = new Map(\n      newItems.map((item: IndexedItem<T>): [string, WNode<Node>] => [\n        getKey(item),\n        currentItemIndex.get(getKey(item)) ?? render(getItem(item)),\n      ])\n    );\n\n    const newChildren: WNode<Node>[] = newItemOrder\n      .map((key) => newItemNodesIndex.get(key))\n      .filter(notNullOrUndefined) as WNode<Node>[];\n\n    anchor.setChildren(newChildren);\n\n    currentItemIndex = newItemNodesIndex;\n  });\n  anchor.registerOnMountHook(() => ref.activate());\n  anchor.registerOnUnmountHook(() => ref.deactivate());\n\n  return anchor;\n};\n","import { Function } from \"./function.interface\";\nimport { notNullOrUndefined } from \"./type_check\";\n\nexport class WDerivationCache<K, V extends Object> {\n  private readonly cache: Map<K, WeakRef<V>> = new Map();\n  private readonly deriveValue: Function<K, V>;\n\n  constructor(deriveValue: Function<K, V>) {\n    this.deriveValue = deriveValue;\n  }\n\n  public get(key: K): V {\n    this.gc();\n\n    const val = this.cache.get(key)?.deref();\n    if (notNullOrUndefined(val)) {\n      return val!;\n    }\n\n    const newVal: V = this.deriveValue(key);\n    this.cache.set(key, new WeakRef(newVal));\n    return newVal;\n  }\n\n  private gc() {\n    for (let key of this.cache.keys()) {\n      const valRef = this.cache.get(key)!;\n      if (valRef.deref() === undefined) {\n        this.cache.delete(key);\n      }\n    }\n  }\n}\n","import { IAtom, isAtom, runEffect } from \"../../../atom\";\nimport { WNode, createFragment } from \"../../../dom\";\nimport {Supplier} from \"../../../utils/function.interface\";\nimport {WDerivationCache} from \"../../../utils/weak_cache\";\n\nexport type IfElseCondition = IAtom<boolean> | Supplier<boolean> | boolean;\n\nexport type IfElseContent = Supplier<WNode<Node>>;\n\nexport type IfElseProps = {\n  condition: IfElseCondition;\n  ifTrue: IfElseContent;\n  ifFalse?: IfElseContent;\n};\n\nconst nullOrUndefinedNode = new WNode(document.createComment(\"null\"));\nexport const ifElse = (props: IfElseProps): WNode<Node> => {\n  let { condition, ifTrue, ifFalse } = props;\n\n  ifFalse ??= () => nullOrUndefinedNode;\n\n  if (typeof condition === \"boolean\") {\n    return staticIfElse(condition, ifTrue, ifFalse);\n  }\n\n  const cache: WDerivationCache<boolean, WNode<Node>> = new WDerivationCache<\n    boolean,\n    WNode<Node>\n  >((value: boolean) => (value ? ifTrue() : ifFalse!()));\n\n  const anchor = createFragment([]);\n\n  let currentRenderedState: boolean;\n  let currentRenderedSubtree: WNode<Node> = nullOrUndefinedNode;\n  const ref = runEffect((): void => {\n    const state: boolean = isAtom(condition)\n      ? (condition as IAtom<boolean>).get()\n      : (condition as Supplier<boolean>)();\n\n    if (state === currentRenderedState) {\n      return;\n    }\n\n    currentRenderedState = state;\n    currentRenderedSubtree = cache.get(state);\n\n    anchor.setChildren([\n      currentRenderedSubtree === nullOrUndefinedNode\n        ? null\n        : currentRenderedSubtree,\n    ]);\n  });\n  anchor.registerOnUnmountHook(() => ref.deactivate());\n  anchor.registerOnMountHook(() => ref.activate());\n\n  return anchor;\n};\nconst staticIfElse = (\n  condition: boolean,\n  ifTrue: Supplier<WNode<Node>>,\n  ifFalse: Supplier<WNode<Node>>\n): WNode<Node> => {\n  const anchor = createFragment([]);\n\n  anchor.setChildren(\n    [condition ? ifTrue() : ifFalse()].filter((c) => c !== nullOrUndefinedNode)\n  );\n\n  return anchor;\n};\n","import { IAtom, runEffect } from \"../../../atom\";\nimport { WNode, createFragment } from \"../../../dom\";\nimport {WDerivationCache} from \"../../../utils/weak_cache\";\nimport {Function} from \"../../../utils/function.interface\";\n\nexport type MatchProps<T> = {\n  state: IAtom<T>;\n  render: Function<T, WNode<Node>>;\n};\n\nexport const match = <T extends Object>(props: MatchProps<T>): WNode<Node> => {\n  let { state, render } = props;\n\n  const anchor = createFragment([]);\n  const matchCache: WDerivationCache<T, WNode<Node>> = new WDerivationCache(\n    render\n  );\n\n  let prevState: T;\n  const ref = runEffect((): void => {\n    if (prevState === state.get()) {\n      return;\n    }\n\n    prevState = state.get();\n    const content = matchCache.get(prevState);\n    anchor.setChildren([content]);\n  });\n  anchor.registerOnMountHook(() => ref.activate());\n  anchor.registerOnUnmountHook(() => ref.deactivate());\n\n  return anchor;\n};\n","import { WNode } from \"./node\";\nimport { createTextNode } from \"./factory\";\n\nexport const wrapTextInWNode = <T>(content: T | string): T | WNode<Node> => {\n  if (typeof content === \"string\") {\n    return createTextNode(content as string);\n  } else {\n    return content;\n  }\n};\n","import {\n  createElement,\n  createFragment,\n  createTextNode,\n  isWNode,\n  WElement,\n  WNode,\n} from \"../../dom\";\nimport { IAtom, isAtom } from \"../../atom\";\nimport { wrapTextInWNode } from \"../../dom/src/util\";\nimport {nullOrUndefined} from \"../../utils/type_check\";\n\nexport type Content = WNode<Node> | string;\nexport type RawOrBinded = IAtom<any> | any;\nexport type Properties = { [key: string]: RawOrBinded };\n\n// prettier-ignore\nexport type ChildrenOnlyElementBuilder<K extends keyof HTMLElementTagNameMap> =\n  (...children: Content[]) => WElement<HTMLElementTagNameMap[K]>;\n\n// prettier-ignore\nexport type PropertiesAndChildrenElementBuilder<K extends keyof HTMLElementTagNameMap> =\n  (properties: Properties, ...children: Content[]) => WElement<HTMLElementTagNameMap[K]>;\n\n// prettier-ignore\nexport type EmptyElementBuilder<K extends keyof HTMLElementTagNameMap> =\n  () => WElement<HTMLElementTagNameMap[K]>;\n\nexport type ElementBuilder<K extends keyof HTMLElementTagNameMap> =\n  ChildrenOnlyElementBuilder<K> &\n    PropertiesAndChildrenElementBuilder<K> &\n    EmptyElementBuilder<K>;\n\n// prettier-ignore\nconst createDslElementBuilder = <K extends keyof HTMLElementTagNameMap>(\n  tag: K\n): ElementBuilder<K> => {\n  return (\n    firstArg?: Content | Properties,\n    ...remainingChildren: Content[]\n  ): WElement<HTMLElementTagNameMap[K]> => {\n    const adaptedFirstArg = wrapTextInWNode(firstArg);\n    const adaptedRemainingChildren = remainingChildren.map(wrapTextInWNode);\n\n    if (nullOrUndefined(adaptedFirstArg)) {\n      return createElement(\n        tag,\n        {},\n        [],\n      );\n    } else if (isWNode(adaptedFirstArg)) {\n      return createElement(\n        tag,\n        {},\n        [adaptedFirstArg as WNode<any>, ...adaptedRemainingChildren],\n      );\n    } else {\n      return createElement(\n        tag,\n        adaptedFirstArg as Properties,\n        adaptedRemainingChildren\n      );\n    }\n  };\n};\n\n// main root\nexport const html = createDslElementBuilder(\"html\");\n\n// document metadata\nexport const base = createDslElementBuilder(\"base\");\nexport const head = createDslElementBuilder(\"head\");\nexport const link = createDslElementBuilder(\"link\");\nexport const meta = createDslElementBuilder(\"meta\");\nexport const style = createDslElementBuilder(\"style\");\nexport const title = createDslElementBuilder(\"title\");\n\n// content sectioning\nexport const body = createDslElementBuilder(\"body\");\nexport const address = createDslElementBuilder(\"address\");\nexport const article = createDslElementBuilder(\"article\");\nexport const aside = createDslElementBuilder(\"aside\");\nexport const footer = createDslElementBuilder(\"footer\");\nexport const header = createDslElementBuilder(\"header\");\nexport const h1 = createDslElementBuilder(\"h1\");\nexport const h2 = createDslElementBuilder(\"h2\");\nexport const h3 = createDslElementBuilder(\"h3\");\nexport const h4 = createDslElementBuilder(\"h4\");\nexport const h5 = createDslElementBuilder(\"h5\");\nexport const h6 = createDslElementBuilder(\"h6\");\nexport const main = createDslElementBuilder(\"main\");\nexport const nav = createDslElementBuilder(\"nav\");\nexport const section = createDslElementBuilder(\"section\");\n\n// text content\nexport const blockquote = createDslElementBuilder(\"blockquote\");\nexport const dd = createDslElementBuilder(\"dd\");\nexport const div = createDslElementBuilder(\"div\");\nexport const dl = createDslElementBuilder(\"dl\");\nexport const dt = createDslElementBuilder(\"dt\");\nexport const figcaption = createDslElementBuilder(\"figcaption\");\nexport const figure = createDslElementBuilder(\"figure\");\nexport const hr = createDslElementBuilder(\"hr\");\nexport const li = createDslElementBuilder(\"li\");\nexport const menu = createDslElementBuilder(\"menu\");\nexport const ol = createDslElementBuilder(\"ol\");\nexport const p = createDslElementBuilder(\"p\");\nexport const pre = createDslElementBuilder(\"pre\");\nexport const ul = createDslElementBuilder(\"ul\");\n\n// inline text semantics\nexport const a = createDslElementBuilder(\"a\");\nexport const abbr = createDslElementBuilder(\"abbr\");\nexport const b = createDslElementBuilder(\"b\");\nexport const bdi = createDslElementBuilder(\"bdi\");\nexport const bdo = createDslElementBuilder(\"bdo\");\nexport const br = createDslElementBuilder(\"br\");\nexport const cite = createDslElementBuilder(\"cite\");\nexport const code = createDslElementBuilder(\"code\");\nexport const data = createDslElementBuilder(\"data\");\nexport const dfn = createDslElementBuilder(\"dfn\");\nexport const em = createDslElementBuilder(\"em\");\nexport const i = createDslElementBuilder(\"i\");\nexport const kbd = createDslElementBuilder(\"kbd\");\nexport const mark = createDslElementBuilder(\"mark\");\nexport const q = createDslElementBuilder(\"q\");\nexport const rp = createDslElementBuilder(\"rp\");\nexport const rt = createDslElementBuilder(\"rt\");\nexport const ruby = createDslElementBuilder(\"ruby\");\nexport const s = createDslElementBuilder(\"s\");\nexport const samp = createDslElementBuilder(\"samp\");\nexport const small = createDslElementBuilder(\"small\");\nexport const span = createDslElementBuilder(\"span\");\nexport const string = createDslElementBuilder(\"strong\");\nexport const sub = createDslElementBuilder(\"sub\");\nexport const sup = createDslElementBuilder(\"sup\");\nexport const time = createDslElementBuilder(\"time\");\nexport const mvar = createDslElementBuilder(\"var\");\nexport const wbr = createDslElementBuilder(\"wbr\");\n\n// demarcating edits\nexport const del = createDslElementBuilder(\"del\");\nexport const ins = createDslElementBuilder(\"ins\");\n\n// table content\nexport const caption = createDslElementBuilder(\"caption\");\nexport const col = createDslElementBuilder(\"col\");\nexport const colgroup = createDslElementBuilder(\"colgroup\");\nexport const table = createDslElementBuilder(\"table\");\nexport const tbody = createDslElementBuilder(\"tbody\");\nexport const td = createDslElementBuilder(\"td\");\nexport const tfoot = createDslElementBuilder(\"tfoot\");\nexport const th = createDslElementBuilder(\"th\");\nexport const thead = createDslElementBuilder(\"thead\");\nexport const tr = createDslElementBuilder(\"tr\");\n\n// forms\nexport const button = createDslElementBuilder(\"button\");\nexport const datalist = createDslElementBuilder(\"datalist\");\nexport const fieldset = createDslElementBuilder(\"fieldset\");\nexport const form = createDslElementBuilder(\"form\");\nexport const input = createDslElementBuilder(\"input\");\nexport const label = createDslElementBuilder(\"label\");\nexport const legend = createDslElementBuilder(\"legend\");\nexport const meter = createDslElementBuilder(\"meter\");\nexport const optgroup = createDslElementBuilder(\"optgroup\");\nexport const option = createDslElementBuilder(\"option\");\nexport const output = createDslElementBuilder(\"output\");\nexport const progress = createDslElementBuilder(\"progress\");\nexport const select = createDslElementBuilder(\"select\");\nexport const textarea = createDslElementBuilder(\"textarea\");\n\n// interactive\nexport const details = createDslElementBuilder(\"details\");\nexport const dialog = createDslElementBuilder(\"dialog\");\nexport const summary = createDslElementBuilder(\"summary\");\n\nexport const frag = (...children: WNode<Node>[]): WNode<Node> =>\n  createFragment(children);\n\nexport type MaybeNode = Node | undefined | null;\nexport type MaybeNodeOrVNode = MaybeNode | WNode<Node>;\n\nexport type TextContent = string | IAtom<string>;\nexport const t = (content: TextContent): WNode<Node> => createTextNode(content);\n","import { WNode, createFragment } from \"../../../dom\";\nimport { notNullOrUndefined } from \"../../../utils/type_check\";\n\nexport type SuspenseProps = {\n  fallback?: WNode<Node>;\n};\n\nexport const suspense = (\n  props: SuspenseProps,\n  child: Promise<WNode<Node>>\n): WNode<Node> => {\n  const anchor = createFragment([]);\n\n  if (notNullOrUndefined(props.fallback)) {\n    anchor.setChildren([props.fallback]);\n  }\n\n  child.then((c) => anchor.setChildren([c]));\n\n  return anchor;\n};\n","import { createElement, WNode } from \"../../dom\";\n\nexport const runApp = (anchor: HTMLElement, app: WNode<Node>): void => {\n  (anchor as any).$$$recoilVElementWrapper = createElement(anchor, {}, [\n    app,\n  ]).mount();\n};\n","import {forEach, ifElse, IndexedItem, match} from \"../../dom-dsl\";\nimport {IAtom, isAtom, runEffect} from \"../../atom\";\nimport { frag, th } from \"../../dom-dsl\";\nimport {createFragment, WElement, WNode} from \"../../dom\";\nimport {Component} from \"./jsx\";\nimport {Producer, Supplier, Function} from \"../../utils/function.interface\";\nimport {notNullOrUndefined} from \"../../utils/type_check\";\n\nexport type SupplyProps = {\n  getChild: Producer<WNode<Node>>;\n};\n\nexport const Supply: Component<SupplyProps, [], WNode<Node>> = (props: SupplyProps): WNode<Node> => {\n  const node = frag();\n\n  const ref = runEffect((): void => {\n    node.setChildren([props.getChild()]);\n  });\n  node.registerOnMountHook(() => ref.activate());\n  node.registerOnUnmountHook(() => ref.deactivate());\n\n  return node;\n};\n\nexport type ForProps<T> = {\n  items: Supplier<IndexedItem<T>[]>;\n  render: Function<T, WNode<Node>>;\n};\n\nexport const For = <T extends Object>(props: ForProps<T>): WNode<Node> => {\n  return forEach<T>(props);\n};\n\nexport type IfProps = {\n  condition: boolean | IAtom<boolean>;\n  true: Supplier<WNode<Node>>;\n  false?: Supplier<WNode<Node>>;\n};\n\nexport const If = (props: IfProps): WNode<Node> => {\n  return ifElse({\n    condition: props.condition,\n    ifTrue: props.true,\n    ifFalse: props.false,\n  });\n};\n\nexport type SwitchProps<T> = {\n  value: IAtom<T>;\n  cases: [T, Supplier<WNode<Node>>][];\n  default?: Supplier<WNode<Node>>;\n}\n\nexport const Switch = <T extends Object>(props: SwitchProps<T>): WNode<Node> => {\n  const caseMatchMap = new Map(props.cases);\n  return match({\n    state: props.value,\n    render: (value: T) => {\n      const result = caseMatchMap.get(value) ?? props.default ?? (() => createFragment([]));\n      return result();\n    },\n  });\n};\n\nexport type SuspenseProps = {\n  default?: WNode<Node>;\n};\n\nexport const Suspense = (props: SuspenseProps, ...children: Promise<WNode<Node>>[]\n): WNode<Node> => {\n  const anchor = frag();\n\n  if (notNullOrUndefined(props.default)) {\n    anchor.setChildren([props.default]);\n  }\n\n  Promise.all(children).then((syncChildren: WNode<Node>[]) => {\n    anchor.setChildren(syncChildren);\n  });\n\n  return anchor;\n};","import { frag, t } from \"../../dom-dsl\";\nimport {createElement, WNode} from \"../../dom\";\n\n/**\n * A strict definition for all custom jsx components to adhere to.\n */\nexport type Component<\n  Props extends Object,\n  Children extends WNode<Node>[],\n  ReturnNode extends WNode<Node>\n  > = (props: Props, ...children: [...Children]) => ReturnNode;\n\nexport const Fragment = Symbol();\n\nexport const jsx = (\n  tag: string | Component<Object, WNode<Node>[], WNode<Node>> | Symbol,\n  props: Object,\n  ...children: WNode<Node>[]\n): WNode<Node> => {\n  if (tag === Fragment) {\n    return frag(...children);\n  }\n\n  if (typeof tag === \"function\") {\n    return (tag as Component<Object, WNode<Node>[], WNode<Node>>)(\n      props,\n      ...children\n    );\n  }\n\n  if (typeof tag !== \"string\") {\n    // TODO(ericr): more specific type and message\n    throw new Error(\"tag type not supported\");\n  }\n\n  return createElement(tag as keyof HTMLElementTagNameMap, props as Object, [\n    ...children,\n  ]);\n};\n","import {Supplier} from \"../../utils/function.interface\";\nimport {deriveState, IAtom, isAtom} from \"../../atom\";\nimport {createTextNode, WNode} from \"../../dom\";\n\nexport type TextNodeTypes = string | boolean | number;\nexport type TextNodeSource = TextNodeTypes | Supplier<TextNodeTypes> | IAtom<TextNodeTypes>;\nexport const $ = (data: TextNodeSource): WNode<Node> => {\n    if (isAtom(data)) {\n        return createTextNode((data as IAtom<TextNodeTypes>).map((v: TextNodeTypes) => v.toString()));\n    } else if (typeof data === \"function\") {\n        return createTextNode(deriveState(() => (data as Supplier<TextNodeTypes>)().toString()));\n    } else {\n      return createTextNode(data.toString());\n    }\n};"],"names":["Maybe","frag"],"mappings":"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"}